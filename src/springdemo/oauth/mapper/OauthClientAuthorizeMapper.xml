<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springdemo.oauth.dao.OauthClientAuthorizeMapper">
  <resultMap id="BaseResultMap" type="springdemo.oauth.vo.OauthClientAuthorize">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="code_authorize_id" jdbcType="INTEGER" property="codeAuthorizeId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, code_authorize_id, user_id, insert_time, update_time
  </sql>
  <select id="selectByExample" parameterType="springdemo.oauth.vo.OauthClientAuthorizeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_client_authorize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="maxSize != null and maxSize != 0">
      limit #{startRowNum} , #{maxSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="springdemo.oauth.vo.OauthClientAuthorizeExample">
    delete from oauth_client_authorize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="springdemo.oauth.vo.OauthClientAuthorize">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_client_authorize (id, client_id, code_authorize_id, 
      user_id, insert_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{clientId,jdbcType=VARCHAR}, #{codeAuthorizeId,jdbcType=INTEGER}, 
      #{userId,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="springdemo.oauth.vo.OauthClientAuthorize">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_client_authorize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="clientId != null">
        client_id,
      </if>
      <if test="codeAuthorizeId != null">
        code_authorize_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="codeAuthorizeId != null">
        #{codeAuthorizeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="springdemo.oauth.vo.OauthClientAuthorizeExample" resultType="java.lang.Long">
    select count(*) from oauth_client_authorize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_client_authorize
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.codeAuthorizeId != null">
        code_authorize_id = #{record.codeAuthorizeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_client_authorize
    set id = #{record.id,jdbcType=VARCHAR},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      code_authorize_id = #{record.codeAuthorizeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into oauth_client_authorize (id, client_id, code_authorize_id, 
      user_id
      )
    values 
    <foreach collection="list" item="item" index="index" separator="," >  
      (UUID(), #{item.clientId,jdbcType=VARCHAR}, #{item.codeAuthorizeId,jdbcType=INTEGER}, 
      	#{item.userId,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
</mapper>